# Configuração do Servidor
server.port=8080

# =================================================
# Configuração do DataSource para Oracle
# =================================================
# IMPORTANTE: VERIFIQUE E SUBSTITUA COM AS SUAS CREDENCIAIS REAIS E DETALHES DE CONEXÃO FORNECIDOS PELA FIAP.
# O ERRO "ORA-01017: invalid username/password" INDICA QUE ESTAS CREDENCIAIS ESTÃO INCORRETAS.
# Certifique-se também que o servidor Oracle está acessível da sua máquina.

# URL de conexão baseada na imagem que você forneceu (image_6e8c21.png):
# Host: oracle.fiap.com.br, Porta: 1521, SID: ORCL
spring.datasource.url=jdbc:oracle:thin:@oracle.fiap.com.br:1521:ORCL

# !!! SUBSTITUA PELO SEU USUÁRIO E SENHA REAIS DO ORACLE DA FIAP !!!
spring.datasource.username=RM555287
spring.datasource.password=251005

spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# =================================================
# Configuração do JPA/Hibernate para Oracle
# =================================================
# Certifique-se de que NÃO HÁ ESPAÇOS no final do nome do dialeto.
# O Spring Boot 3.2.x com Hibernate 6+ geralmente lida bem com org.hibernate.dialect.OracleDialect
# para versões Oracle 12c e superiores.
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
# Se o erro de dialeto persistir e você souber que a versão do Oracle é 12c ou mais recente, pode tentar:
# spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect

# Opções para ddl-auto:
#   validate: valida o schema, não faz alterações. Bom se o schema já existe.
#   update: atualiza o schema. Use com cuidado, especialmente em bancos partilhados.
#   create: cria o schema, destruindo dados anteriores.
#   create-drop: cria o schema ao iniciar e destrói ao desligar. Útil para testes.
#   none: não faz nada com o schema.
# Para o ambiente FIAP, 'validate' ou 'none' podem ser mais seguros se você não tiver permissão para alterar o schema.
# Se for um schema seu, 'update' pode ser usado durante o desenvolvimento.
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# A propriedade abaixo pode ajudar com a forma como o Hibernate nomeia tabelas/colunas no Oracle.
# spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
# Ou, se o Oracle estiver a usar identificadores em maiúsculas e você tiver problemas:
# spring.jpa.properties.hibernate.globally_quoted_identifiers=true


# Desabilitar o console H2
spring.h2.console.enabled=false

# Configuração do SpringDoc OpenAPI (Swagger)
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tryItOutEnabled=true

# Configuração de JWT (placeholders, defina os seus)
# jwt.secret=UmSegredoMuitoLongoForteESeguroParaSeuTokenJWTComPeloMenos32Bytes
# jwt.expirationMs=86400000 # 24 horas em milissegundos

# Logging
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG 
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 
logging.level.com.comu.comunidade_java=DEBUG 